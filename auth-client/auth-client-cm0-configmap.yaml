apiVersion: v1
data:
  auth-client-claim1-persistentvolumeclaim.yaml: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        io.kompose.service: auth-client-claim1
      name: auth-client-claim1
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
  auth-client-cm0-configmap.yaml: |
    apiVersion: v1
    data:
      docker-compose.yml: |-
        services:
          mysqldb:
            image: "mysql:8.0"
            restart: always
            networks:
              - auth
            ports:
              - 3306:3306
            expose:
              - 3306
            environment:
              MYSQL_DATABASE: users
              MYSQL_ROOT_PASSWORD: admin
            volumes:
              - mysql-data:/var/lib/mysql
          auth-client:
            image: khanster/auth-client:kube
            ports:
              - "8090:8090"
            networks:
              - auth
            environment:
              - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/users
              - SPRING_DATASOURCE_USERNAME=root
              - SPRING_DATASOURCE_PASSWORD=admin
            depends_on:
              - mysqldb
            volumes:
              - .:/usr/app
              - ./.m2:/root/.m2


        volumes:
          mysql-data:
        networks:
          auth:
            name: auth
            external: true
    kind: ConfigMap
    metadata:
      labels:
        io.kompose.service: auth-client
      name: auth-client-cm0
  auth-client-deploy.sh: |-
    # !/bin/bash

    kubectl apply  -n default -f auth-client-claim1-persistentvolumeclaim.yaml,auth-client-deployment.yaml,auth-client-service.yaml,mysql-data-persistentvolumeclaim.yaml,mysqldb-service.yaml,auth-client-cm0-configmap.yaml,auth-client-deploy.sh,mysqldb-deployment.yaml
  auth-client-deployment.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: auth-client
      name: auth-client
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: auth-client
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert
            kompose.version: 1.34.0 (cbf2835db)
          labels:
            io.kompose.service: auth-client
        spec:
          containers:
            - env:
                - name: SPRING_DATASOURCE_PASSWORD
                  value: admin
                - name: SPRING_DATASOURCE_URL
                  value: jdbc:mysql://mysqldb:3306/users
                - name: SPRING_DATASOURCE_USERNAME
                  value: root
              image: khanster/auth-client:kube
              name: auth-client
              ports:
                - containerPort: 8090
                  protocol: TCP
              volumeMounts:
                - mountPath: /usr/app
                  name: auth-client-cm0
                - mountPath: /root/.m2
                  name: auth-client-claim1
          restartPolicy: Always
          volumes:
            - configMap:
                name: auth-client-cm0
              name: auth-client-cm0
            - name: auth-client-claim1
              persistentVolumeClaim:
                claimName: auth-client-claim1
  auth-client-service.yaml: |
    apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: auth-client
      name: auth-client
    spec:
      type: LoadBalancer
      clusterIP: 10.96.0.12
      ports:
        - name: "8090"
          port: 8090
          targetPort: 8090
      selector:
        io.kompose.service: auth-client
  docker-compose.yml: |-
    services:
      mysqldb-client:
        image: "mysql:8.0"
        restart: always
        networks:
          - auth
        ports:
          - 3306:3306
        expose:
          - 3306
        environment:
          MYSQL_DATABASE: users
          MYSQL_ROOT_PASSWORD: admin
        volumes:
          - mysql-data:/var/lib/mysql
      auth-client:
        image: khanster/auth-client:kube
        ports:
          - "8090:8090"
        networks:
          - auth
        environment:
          - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb-client:3306/users
          - SPRING_DATASOURCE_USERNAME=root
          - SPRING_DATASOURCE_PASSWORD=admin
        depends_on:
          - mysqldb-client
        volumes:
          - .:/usr/app
          - ./.m2:/root/.m2


    volumes:
      mysql-data:
    networks:
      auth:
        name: auth
        external: true
  mysql-data-persistentvolumeclaim.yaml: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        io.kompose.service: mysql-data
      name: mysql-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
  mysqldb-deployment.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: mysqldb
      name: mysqldb
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mysqldb
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert
            kompose.version: 1.34.0 (cbf2835db)
          labels:
            io.kompose.service: mysqldb
        spec:
          containers:
            - env:
                - name: MYSQL_DATABASE
                  value: users
                - name: MYSQL_ROOT_PASSWORD
                  value: admin
              image: mysql:8.0
              name: mysqldb
              ports:
                - containerPort: 3306
                  protocol: TCP
              volumeMounts:
                - mountPath: /var/lib/mysql
                  name: mysql-data
          restartPolicy: Always
          volumes:
            - name: mysql-data
              persistentVolumeClaim:
                claimName: mysql-data
  mysqldb-service.yaml: |
    apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: mysqldb
      name: mysqldb
    spec:
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: mysqldb
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: auth-client
  name: auth-client-cm0
